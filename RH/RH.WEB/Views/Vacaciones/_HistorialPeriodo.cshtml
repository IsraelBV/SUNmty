@using RH.BLL;
@using Common.Helpers;
@using Common.Enums;
@model  List<RH.BLL.DatosEmpleadoVacaciones>
    @{ 
        var idcontrato = ViewBag.idcontrato;
        var DiasTomados = ViewBag.DiasTomados;
        var DiasTotales = ViewBag.DiasTotales;
    }
            <div class="table table-responsive" id="actualizar">
                <table class="table table-condensed table-hover" id="tblHistorialPeriodo" width="100%">
                    <thead>
                        <tr>
                            <th></th>
                            <th width="50px">ID</th>
                            <th>Id Periodo</th>
                            <th>Periodo Vacaciones</th>
                            <th>Días Tomados</th>
                            <th>Fecha Inicio</th>
                            <th>Fecha Fin</th>
                            <th>Presentarse</th>
                            <th>Observaciones</th>
                           


                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var a in Model.Where(s => s.status == true))
                        {
                            <tr id="@a.idvacaciones" data-id="@a.idvacaciones">
                                <td class="text-center" ><input type="checkbox" name="input-vacaciones" value="@a.idvacaciones" id="input@(a.idvacaciones)" /></td>
                                <td class="idVacaciones2">@a.idvacaciones</td>
                                <td class="idPeriodo2">@a.IdPeriodo</td>
                                <td>@a.PerioVaca</td>
                                <td>@a.DiasTomados</td>
                                <td>@a.Inicio.ToString("dd/MM/yyyy")</td>
                                <td>@a.Fin.ToString("dd/MM/yyyy")</td>
                                <td>@a.Presentarse.ToString("dd/MM/yyyy")</td>
                                <td>@a.observaciones</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
    

       
<script type="text/javascript">
    $(document).ready(function () { 


        //KARDEX


        var table = $("#tblHistorialPeriodo").DataTable({
            "bLengthChange": false,

            "lengthMenu": [[5, 15, 30], [5, 15, 30]],
            "language": {
                "sInfoFiltered": "(filtrado de un total de _MAX_ Registros)",

                "sZeroRecords": "No se encontraron resultados",
                "sInfo": "Del _START_ al _END_ de un total de _TOTAL_ registros",
                "infoEmpty": "No se encontraron registros",
                "sEmptyTable": "Ningún dato disponible en esta tabla",
                "sLoadingRecords": "Cargando...",
                "sLengthMenu": "Mostrar _MENU_ Registros",
                "sSearch": "Buscar:",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                select: {
                    row: {
                        _: "Seleccionados: %d ",
                        0: "Has click en los registros para seleccionarlos"
                    }
                }
            },
            "order": [[1, "asc"]],
            "aoColumnDefs": [
                { "bSortable": false, "aTargets": [0] },
                { "bSearchable": false, "aTargets": [0] }
            ],
            select: {
                style: 'multi'
            }
        });

        var seleccionados = [];

        table.on('select', function (e, dt, type, indexes) {
            var rowData = table.rows(indexes).ids();
            checkSeleccionados();
            $("#input" + rowData[0]).prop("checked", true).change();
        });

        function checkSeleccionados() {
            var seleccionados = table.rows(".selected").ids();
            if (seleccionados.length == 0) {
                $(".btn-toolbar-hidden").hide();
            }
            else if (seleccionados.length > 0) {
                $(".btn-toolbar-hidden").show();
            }

            return seleccionados;
        }
        $('a[data-toggle="tab"]').on('shown.bs.tab', function () {
            $("input[name='input-vacaciones']").prop("checked", false);
            $("input[name='input-vacaciones']").change();
            table.rows().deselect();
        });
        table.on('deselect', function (e, dt, type, indexes) {
            var rowData = table.rows(indexes).ids();
            checkSeleccionados();
            $("#input" + rowData[0]).prop("checked", false).change();
        });

        $(".btn-toolbar-hidden").hide();

        $("#btnReporte").click(function () {
            var vacaciones = table.rows(".selected").ids();
            var array = [] ;
            for (i = 0; i < vacaciones.length; i++) {
                array[i] = vacaciones[i];
            }
            var idPlantilla = $("#Plantilla").val();

            $.ajax({
                url: "/Vacaciones/GenerarPlantillaVacaciones",
                method: "POST",
                data: {
                    idPlantilla: idPlantilla,
                    vacaciones: array,
                }
            }).done(function (data) {
                console.log(data);
                if (data != null) {
                    var url = "/Vacaciones/GetPlantillaVacaciones/?path=DATA";
                    url = url.replace("DATA", data);
                    console.log(url);
                    window.location.href = url;
                }
                else {
                    showMessage("¡Error!", "Ocurrió un error inesperado.", "danger");
                }
            });

        });

  
    });
</script>